[build-system]
requires = ["poetry-core>=1.0.0", "poetry-dynamic-versioning"]
build-backend = "poetry_dynamic_versioning.backend"

[tool.poetry]
name = "firebirdsql-run"
version = "0.0.0"
description = "Firebirdsql wrapper inspired by subprocess.run"
authors = ["DeadNews <aurczpbgr@mozmail.com>"]
license = "MIT"
readme = "README.md"
homepage = "https://github.com/DeadNews/firebirdsql-run"
repository = "https://github.com/DeadNews/firebirdsql-run"
keywords = ["firebird", "sql", "api"]
classifiers = ["Operating System :: OS Independent", "Topic :: Database"]

[tool.poetry.dependencies]
python = "^3.10"
firebirdsql = "^1.2.3"

[tool.poetry.group.lint.dependencies]
mypy = "^1.8.0"
poethepoet = "^0.24.4"
pyright = "^1.1.350"
ruff = "^0.2.1"

[tool.poetry.group.test.dependencies]
pytest = "^8.0.0"
pytest-cov = "^4.1.0"

[tool.poetry-dynamic-versioning]
enable = true
vcs = "git"
style = "semver"

[tool.poe.tasks]
mypy = "mypy ."
pyright = "pyright ."
ruff = "ruff check ."
ruff-fmt = "ruff format ."
lint.sequence = ["ruff", "ruff-fmt", "mypy"]

[tool.poe.tasks.test]
cmd = "pytest --cov-report=xml"

[tool.pytest.ini_options]
addopts = "--verbose --cov=./src --cov-report=term"
testpaths = ["tests"]
markers = ["docker", "online"]

[tool.coverage.report]
exclude_lines = [
  "# pragma: no cover",
  "if __name__ == .__main__.:",
  "if TYPE_CHECKING:",
]

[tool.mypy]
disallow_untyped_defs = true
follow_imports = "normal"
ignore_missing_imports = true
show_column_numbers = true
show_error_codes = true
warn_unused_ignores = true

[[tool.mypy.overrides]]
module = ["tests.*"]
disallow_untyped_defs = false

[tool.ruff]
line-length = 99
target-version = "py310" # Until Poetry v2

[tool.ruff.format]
line-ending = "lf"

[tool.ruff.lint]
select = ["ALL"]
ignore = [
  "COM812",  # Trailing comma missing
  "D203",    # 1 blank line required before class docstring
  "D212",    # Multi-line docstring summary should start at the first line
  "FBT001",  # Boolean positional arg in function definition
  "FBT002",  # Boolean default value in function definition
  "ISC001",  # Checks for implicitly concatenated strings on a single line
  "PLR0913", # Too many arguments to function call
]

[tool.ruff.lint.per-file-ignores]
"__init__.py" = ["F401"]
"tests/*" = ["ANN", "D", "E501", "PLC1901", "PLR2004", "S"]

[tool.ruff.lint.flake8-tidy-imports]
ban-relative-imports = "all"

[tool.ruff.lint.pycodestyle]
max-doc-length = 129
max-line-length = 129

[tool.ruff.lint.pydocstyle]
convention = "google"
